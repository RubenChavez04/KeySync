import os
import subprocess
import psutil
import webbrowser
import pandas

appList = []
buttonFunctionList = []

def update_button_function(button_id, function, press_type):
    buttonFunctionList[button_id][press_type] = function

def assign_app_name(button_id,name):
    buttonFunctionList[button_id][0] = name

def update_shellpid(app,pid):
    for i in range(len(appList)):
        if appList[i][0] == app:
            appList[i][2] = pid

def get_shellpid(app):
    for i in range(len(appList)):
        if appList[i][0] == app:
            return appList[i][2]

def get_child_shell(app):
    parent = psutil.Process(get_shellpid(app))
    children = parent.children(recursive=True)
    child_pid = children[0].pid
    return child_pid

def run_function(app,function):
    filepath = get_file_path(app)
    if filepath == "Unrecognized File":
        print("Uh oh")
    else:
        if function == 'Open':
            open_app(app,filepath)
        elif function == 'Close':
            close_app(app)

def open_app(app,filepath):
    if ".exe" in filepath:
        shell_process = subprocess.Popen(filepath, shell=True, close_fds=True)
        for i in range(len(appList)):
            if appList[i][0] == app:
                appList[i][2] = shell_process.pid
                break
    elif filepath.startswith("URL "):  #Given from get_file_path, will start with 'URL '
        webbrowser.open(filepath[4:])
    elif filepath.startswith("Steam "):
        subprocess.Popen(['explorer.exe',f'steam://rungameid/{filepath[6:]}'],shell=True)
    elif filepath.startswith("Microsoft.AutoGenerated"):
        pass

def close_app(app):
    child_pid = get_child_shell(app)
    if child_pid:
        subprocess.run(["taskkill", "/PID", str(child_pid), "/T", "/F"], shell=True)
    else:
        pid = get_shellpid(app)
        if pid:
            subprocess.run(["taskkill", "/PID", str(pid), "/T", "/F"], shell=True)

def get_file_path(app):
    for i in range(len(appList)):
        if appList[i][0] == app:
            app_id = appList[i][1]
            if app_id.startswith("http"): #URL
                return f"URL {app_id}"
            elif "!" in app_id: #Only microsoft apps have ! in them
                return f"explorer.exe shell:appsFolder\\{app_id}"
            elif 'Microsoft.AutoGenerated' in app_id:
                return f"Microsoft.AutoGenerated {app_id}"
            elif app_id.startswith("steam:"):
                return f'Steam {app_id[18:]}'
            elif 'exe' in app_id:
                return app_id
            else:
                return "Unrecognized File"

def get_app_name(button_id):
    return buttonFunctionList[button_id][0]

def get_button_function(button_id,press_type):
    return buttonFunctionList[button_id][press_type]

def exec_button_press(button_id, press_type):
    app = get_app_name(button_id)
    function = get_button_function(button_id, press_type+1)
    run_function(app,function)

def read_file():
    path_to_this_file = os.path.dirname(os.path.abspath(__file__))
    csv_path = os.path.join(path_to_this_file,"scripts", "InstalledApps.csv")
    csv_df = pandas.read_csv(csv_path, usecols=["Name","AppID"])
    return csv_df

def update_lists():
    df = read_file()
    for i in range(len(df)):
        appList.append([df["Name"][i],df["AppID"][i],'pid'])

update_lists()
run_function("Ultimate Chicken Horse","Open")


